#cloud-config

---
coreos:

  etcd2:
    advertise-client-urls: http://${ fqdn }:2379
    # cert-file: /etc/kubernetes/ssl/k8s-etcd.pem
    # debug: true
    discovery-srv: ${ internal_tld }
    initial-advertise-peer-urls: https://${ fqdn }:2380
    initial-cluster-state: new
    initial-cluster-token: ${ cluster-token }
    # key-file: /etc/kubernetes/ssl/k8s-etcd-key.pem
    listen-client-urls: http://0.0.0.0:2379
    listen-peer-urls: https://0.0.0.0:2380
    name: ${ hostname }
    peer-trusted-ca-file: /etc/kubernetes/ssl/ca.pem
    peer-client-cert-auth: true
    peer-cert-file: /etc/kubernetes/ssl/k8s-etcd.pem
    peer-key-file: /etc/kubernetes/ssl/k8s-etcd-key.pem

  units:
    - name: etcd2.service
      command: start

    - name: docker.service
      command: start

    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes kubelet
        Requires=network-online.target
        After=network-online.target

        [Service]
        Restart=always
        RestartSec=10
        EnvironmentFile=/etc/default/kubelet
        ExecStart=/home/kubernetes/bin/kubelet $KUBELET_OPTS

        [Install]
        WantedBy=multi-user.target

  update:
    reboot-strategy: etcd-lock

write-files:

  - path: /etc/default/kubelet
    content: |
      KUBELET_OPTS=" \
      --v=2  \
      --allow-privileged=true \
      --babysit-daemons=true \
      --cgroup-root=/ \
      --cloud-provider=gce \
      --cluster-dns=10.0.0.10 \
      --cluster-domain=cluster.local \
      --pod-manifest-path=/etc/kubernetes/manifests \
      --enable-debugging-handlers=false \
      --hairpin-mode=none \
      --api-servers=https://35.188.192.7 \
      --register-schedulable=false \
      --network-plugin-dir=/home/kubernetes/bin \
      --network-plugin=kubenet \
      --node-labels=beta.kubernetes.io/fluentd-ds-ready=true \
      --feature-gates=ExperimentalCriticalPodAnnotation=true \
      "

  - path: /etc/flannel/options.env
    content: |
      FLANNELD_IFACE=$private_ipv4
      FLANNELD_ETCD_ENDPOINTS=http://etcd.${ internal_tld }:2379

  - path: /etc/kubernetes/cni/docker_opts_cni.env
    content: |
      DOCKER_OPT_BIP=""
      DOCKER_OPT_IPMASQ=""

  - path: /etc/kubernetes/cni/net.d/10-flannel.conf
    content: |
        {
            "name": "podnet",
            "type": "flannel",
            "delegate": {
                "isDefaultGateway": true
            }
        }

  - path: /etc/kubernetes/manifests/kube-apiserver.yml
    encoding: "gzip+base64"
    content: |
      ${ kube-apiserver }
      
  - path: /etc/kubernetes/manifests/kube-controller-manager.yml
    encoding: "gzip+base64"
    content: |
      ${ kube-controller-manager }

  - path: /etc/kubernetes/manifests/kube-proxy.yml
    content: |
      ${ kube-proxy }

  - path: /etc/kubernetes/manifests/kube-scheduler.yml
    content: |
      ${ kube-scheduler } 

  - path: /etc/kubernetes/ssl/ca.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ ca }
      
  - path: /etc/kubernetes/ssl/k8s-etcd.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ etcd }
      
  - path: /etc/kubernetes/ssl/k8s-etcd-key.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ etcd_key }
      
  - path: /etc/kubernetes/ssl/k8s-apiserver.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ apiserver }

  - path: /etc/kubernetes/ssl/k8s-apiserver-key.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ apiserver_key }

