#These should/can be set via a trigger
variables:
  TF_VAR_kubelet_image_url: "gcr.io/google-containers/hyperkube"
  TF_VAR_kubelet_image_tag: "v1.6.3"

provisioning:
  stage: docker-build
  except:
    - triggers
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE/$CI_JOB_NAME:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE/$CI_JOB_NAME:$CI_COMMIT_REF_SLUG"

stages:
  - docker-build
  - request-clouds
  - run-demo
  - destroy-clouds

deploy_aws:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: request-clouds
  when: manual
  variables:
    CLOUD: aws
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.cncf.ci/
    on_stop: destroy_aws
  script:
    - echo CLOUD=$CLOUD
    - echo CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG
    - /cncf/provision.sh ${CLOUD}-deploy ${CI_ENVIRONMENT_SLUG}
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig
 
use_aws:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/demo/kubectl:$CI_COMMIT_REF_SLUG
  stage: run-demo
  when: manual
  variables:
    CLOUD: aws
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    on_stop: destroy_aws
  script:
    - echo CLOUD=$CLOUD
    - echo CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig
    - find ./data/
    - ls -la $(pwd)/data/${CI_ENVIRONMENT_SLUG}/
    - kubectl get nodes
    - kubectl get pods
    - kubectl get componentstatuses

destroy_aws:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: destroy-clouds
  when: manual
  variables:
    CLOUD: aws
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    action: stop
  script:
    - echo CLOUD=$CLOUD
    - echo CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG
    - /cncf/provision.sh ${CLOUD}-destroy ${CI_ENVIRONMENT_SLUG}

deploy_gke:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: request-clouds
  when: manual
  variables:
    CLOUD: gke
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.cncf.ci/
    on_stop: destroy_gke
  script:
    - /cncf/provision.sh ${CLOUD}-deploy ${CI_ENVIRONMENT_SLUG}
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig

use_gke:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/demo/kubectl:$CI_COMMIT_REF_SLUG
  stage: run-demo
  when: manual
  variables:
    CLOUD: gke
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    on_stop: destroy_gke
  script:
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig
    - kubectl get nodes
    - kubectl get pods
    - kubectl get componentstatuses

destroy_gke:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: destroy-clouds
  when: manual
  variables:
    CLOUD: gke
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    action: stop
  script:
    - /cncf/provision.sh ${CLOUD}-destroy ${CI_ENVIRONMENT_SLUG}

deploy_azure:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: request-clouds
  when: manual
  variables:
    CLOUD: azure
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.cncf.ci/
    on_stop: destroy_gke
  script:
    - /cncf/provision.sh ${CLOUD}-deploy ${CI_ENVIRONMENT_SLUG}
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig

use_azure:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/demo/kubectl:$CI_COMMIT_REF_SLUG
  stage: run-demo
  when: manual
  variables:
    CLOUD: azure
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    on_stop: destroy_gke
  script:
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig
    - kubectl get nodes
    - kubectl get pods
    - kubectl get componentstatuses

destroy_azure:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: destroy-clouds
  when: manual
  variables:
    CLOUD: azure
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    action: stop
  script:
    - /cncf/provision.sh ${CLOUD}-destroy ${CI_ENVIRONMENT_SLUG}

deploy_packet:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: request-clouds
  when: manual
  variables:
    CLOUD: packet
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.cncf.ci/
    on_stop: destroy_packet
  script:
    - /cncf/provision.sh ${CLOUD}-deploy ${CI_ENVIRONMENT_SLUG}
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig

use_packet:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/demo/kubectl:$CI_COMMIT_REF_SLUG
  stage: run-demo
  when: manual
  variables:
    CLOUD: packet
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    on_stop: destroy_packet
  script:
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig
    - kubectl get nodes
    - kubectl get pods
    - kubectl get componentstatuses

destroy_packet:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: destroy-clouds
  when: manual
  variables:
    CLOUD: packet
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    action: stop
  script:
    - /cncf/provision.sh ${CLOUD}-destroy ${CI_ENVIRONMENT_SLUG}

deploy_gce:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: request-clouds
  when: manual
  variables:
    CLOUD: gce
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.cncf.ci/
    on_stop: destroy_gce
  script:
    - echo CLOUD=$CLOUD
    - echo CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG
    - /cncf/provision.sh ${CLOUD}-deploy ${CI_ENVIRONMENT_SLUG}
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig

use_gce:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/demo/kubectl:$CI_COMMIT_REF_SLUG
  stage: run-demo
  when: manual
  variables:
    CLOUD: gce
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    on_stop: destroy_gce
  script:
    - echo CLOUD=$CLOUD
    - echo CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG
    - export KUBECONFIG=$(pwd)/data/${CI_ENVIRONMENT_SLUG}/kubeconfig
    - kubectl get nodes
    - kubectl get pods
    - kubectl get componentstatuses

destroy_gce:
  allow_failure: true
  image: ${CI_REGISTRY}/cncf/cross-cloud/provisioning:$CI_COMMIT_REF_SLUG
  stage: destroy-clouds
  when: manual
  variables:
    CLOUD: gce
  environment:
    name: ${CLOUD}-${CI_COMMIT_REF_SLUG}
    url: https://$CI_ENVIRONMENT_SLUG.demo.cncf.ci/
    action: stop
  script:
    - echo CLOUD=$CLOUD
    - echo CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG
    - /cncf/provision.sh ${CLOUD}-destroy ${CI_ENVIRONMENT_SLUG}
