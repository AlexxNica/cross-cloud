#cloud-config

---
coreos:

  etcd2:
    advertise-client-urls: http://$private_ipv4:2379
    # cert-file: /etc/kubernetes/ssl/k8s-etcd.pem
    debug: true
    initial-advertise-peer-urls: http://$private_ipv4:2380
    # key-file: /etc/kubernetes/ssl/k8s-etcd-key.pem
    listen-client-urls: http://$private_ipv4:2379,http://127.0.0.1:2379
    listen-peer-urls: http://$private_ipv4:2380
    name: ${ fqdn } 
    discovery: ${ etcd_discovery }
    # peer-trusted-ca-file: /etc/srv/kubernetes/pki/ca-certificates.crt
    # peer-client-cert-auth: true
    # peer-cert-file: /etc/srv/kubernetes/pki/etcd.crt
    # peer-key-file: /etc/srv/kubernetes/pki/etcd.key

  units:
    - name: etcd2.service
      command: start

    - name: docker.service
      command: start

    - name: bins.service
      command: start
      content: |
        [Unit]
        Description=Download Binaries
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStartPre=/usr/bin/mkdir --parents /home/kubernetes/bin
        ExecStartPre=/usr/bin/curl -L -o /home/kubernetes/bin/kubelet https://storage.googleapis.com/kubernetes-release/release/v1.6.6/bin/linux/amd64/kubelet
        ExecStartPre=/usr/bin/curl -L -o /home/kubernetes/bin/cni.tar https://github.com/containernetworking/cni/releases/download/v0.5.2/cni-amd64-v0.5.2.tgz
        ExecStartPre=/usr/bin/tar -xvf /home/kubernetes/bin/cni.tar -C /home/kubernetes/bin/
        ExecStart=/usr/bin/chmod +x /home/kubernetes/bin/kubelet

    - name: socat.service
      command: start
      content: |
        [Unit]
        Description=Install Socat
        After=docker.service
        Requires=docker.service

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStartPre=/usr/bin/mkdir --parents /opt/bin
        ExecStart=/usr/bin/docker run --rm -v /opt/bin/:/socat/ registry.cncf.ci/cncf/cross-cloud/socat:ci-stable-v0-2-0 cp /output/linux/x86_64/socat /socat

    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes kubelet
        After=socat.service
        Requires=socat.service

        [Service]
        Restart=always
        RestartSec=10
        Environment="PATH=/opt/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        EnvironmentFile=/etc/default/kubelet
        ExecStart=/home/kubernetes/bin/kubelet $KUBELET_OPTS

        [Install]
        WantedBy=multi-user.target

  update:
    reboot-strategy: etcd-lock

write-files:

  - path: /etc/default/kubelet
    content: |
      KUBELET_OPTS="--v=2 --allow-privileged=true --babysit-daemons=true --cgroup-root=/ --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --pod-manifest-path=/etc/kubernetes/manifests --enable-debugging-handlers=true --hairpin-mode=promiscuous-bridge --api-servers=http://127.0.0.1:8080 --register-schedulable=true --network-plugin-dir=/home/kubernetes/bin --network-plugin=kubenet --feature-gates=ExperimentalCriticalPodAnnotation=true"
      
  - path: /etc/kubernetes/manifests/kube-apiserver.yml
    encoding: "gzip+base64"
    content: |
      ${ kube_apiserver }

  - path: /etc/kubernetes/manifests/kube-controller-manager.yml
    encoding: "gzip+base64"
    content: |
      ${ kube_controller_manager }

  - path: /etc/kubernetes/manifests/kube-proxy.yml
    encoding: "gzip+base64"
    content: |
      ${ kube_proxy }

  - path: /etc/kubernetes/manifests/kube-scheduler.yml
    encoding: "gzip+base64"
    content: |
      ${ kube_scheduler }

  - path: /etc/srv/kubernetes/pki/ca-certificates.crt
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ ca }

  - path: /etc/srv/kubernetes/pki/apiserver.crt
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ apiserver }

  - path: /etc/srv/kubernetes/pki/apiserver.key
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ apiserver_key }

  - path: /etc/srv/kubernetes/pki/etcd.crt
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ etcd }

  - path: /etc/srv/kubernetes/pki/etcd.key
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ etcd_key }
